plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility versions.sourceCompatibility
        targetCompatibility versions.targetCompatibility
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ['-Xopt-in=kotlin.RequiresOptIn']
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

}

dependencies {
    implementation deps.gson
    api deps.okhttp3
    api deps.okhttp3Logging
    api deps.kotlinxCoroutinesCore
    api deps.kotlinxCoroutinesAndroid
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.convention("sources")
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.getSrcDirs()
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

publishing {
    publications {
        production(MavenPublication) {
            groupId "com.nice.kotlins"
            artifactId "kothttp"
            version "${versionMajor}.${versionMinor}.${versionPatch}"

            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }

            artifact androidSourcesJar
        }
    }
    repositories {
        def deployPath = file(getProperty('aar.deployPath'))
        maven { url "file://${deployPath.absolutePath}" }
    }
}