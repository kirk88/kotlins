plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven'
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility versions.sourceCompatibility
        targetCompatibility versions.targetCompatibility
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    api deps.kotlinStdlib
    api deps.kotlinCore
    api deps.kotlinCoroutinesCore
    api deps.kotlinCoroutinesAndroid
    api deps.kotlinLifecycleViewmodel
    api deps.kotlinLifecycleViewmodelSavedstate
    api deps.kotlinLifecycleRuntime
    api deps.kotlinLifecycleLivedata
    api deps.kotlinFragment
    api deps.multidex
    api deps.datastorePreferences
    api deps.datastoreCore
    api deps.appcompat
    api deps.design
    api deps.constraintlayout
    api deps.recyclerview
    api deps.okhttp
    api deps.okhttpLogging
    api deps.gson
    api deps.coil

    testImplementation deps.testJunit
    androidTestImplementation deps.testAndroidJunit
    androidTestImplementation deps.testAndroidEspresso
    androidTestImplementation deps.testAndroidRules
}

uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(getProperty('aar.deployPath'))
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId publisher.groupId
            artifactId publisher.artifactId
            version publisher.version

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.convention("sources")
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.getSrcDirs()
}

artifacts {
    archives androidSourcesJar
}