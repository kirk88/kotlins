apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'maven'

android {
    compileSdkVersion rootProject.ext.android.compile_sdk_version
    buildToolsVersion rootProject.ext.android.build_tools_version

    defaultConfig {
        minSdkVersion rootProject.ext.android.min_sdk_version
        targetSdkVersion rootProject.ext.android.target_sdk_version
        versionCode rootProject.ext.android.version_code
        versionName rootProject.ext.android.version_name

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    testImplementation rootProject.ext.dependencies.java_test_junit
    androidTestImplementation rootProject.ext.dependencies.android_test_ext
    androidTestImplementation rootProject.ext.dependencies.android_test_espresso
    androidTestImplementation rootProject.ext.dependencies.android_test_rules

    api rootProject.ext.dependencies.multidex
    api rootProject.ext.dependencies.kotlin_stdlib
    api rootProject.ext.dependencies.kotlin_core
    api rootProject.ext.dependencies.coroutines_core
    api rootProject.ext.dependencies.coroutines_android
    api rootProject.ext.dependencies.lifecycle_viewmodel_ktx
    api rootProject.ext.dependencies.lifecycle_viewmodel_savedstate
    api rootProject.ext.dependencies.lifecycle_runtime_ktx
    api rootProject.ext.dependencies.lifecycle_livedata_ktx
    api rootProject.ext.dependencies.datastore_preferences
    api rootProject.ext.dependencies.datastore_core
    api rootProject.ext.dependencies.appcompat
    api rootProject.ext.dependencies.design
    api rootProject.ext.dependencies.fragment_ktx
    api rootProject.ext.dependencies.constraintlayout
    api rootProject.ext.dependencies.recyclerview
    api rootProject.ext.dependencies.okhttp
    api rootProject.ext.dependencies.okhttp_logging
    api rootProject.ext.dependencies.jackson
    api rootProject.ext.dependencies.coil
}

uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(getProperty('aar.deployPath'))
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId rootProject.ext.publisher.group_id
            artifactId rootProject.ext.publisher.artifact_id
            version rootProject.ext.publisher.version

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.convention("sources")
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.getSrcDirs()
}

artifacts {
    archives androidSourcesJar
}